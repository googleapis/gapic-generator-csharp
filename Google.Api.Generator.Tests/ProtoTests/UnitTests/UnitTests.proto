syntax = "proto3";

package testing.unittests;

option csharp_namespace = "Testing.UnitTests";

import "google/api/client.proto";
import "google/longrunning/operations.proto";
import "google/api/resource.proto";
import "google/protobuf/wrappers.proto";

service UnitTests {
  option (google.api.default_host) = "unittests.example.com";

  rpc MethodValues(ValuesRequest) returns(Response) {
    option (google.api.method_signature) = "single_double";
    option (google.api.method_signature) = "single_double,single_float,single_int32,single_int64,repeated_bool,repeated_bytes,repeated_resource_name,map_int_string,single_wrapped_string,repeated_wrapped_double";
    option (google.api.method_signature) = "single_resource_name, repeated_resource_name, single_wildcard_resource, repeated_wildcard_resource, multi_pattern_resource_name, repeated_multi_pattern_resource_name";
  }

  // LRO method, to test the client mocking supports LRO.
  rpc MethodLro(LroRequest) returns(google.longrunning.Operation) {
    option (google.longrunning.operation_info) = {
      response_type: "LroResponse"
      metadata_type: "LroMetadata"
    };
  }
}

message AResource {
  option (google.api.resource) = {
    type: "unittests.example.com/AResource"
    pattern: "items/{item_id}/parts/{part_id}"
  };
  string name = 1;
}

message WildcardResource {
  option (google.api.resource) = {
    type: "unittests.example.com/WildcardResource"
    pattern: "*"
  };
  string name = 1;
}

message MultiPatternResource {
  option (google.api.resource) = {
    type: "unittests.example.com/MultiPatternResource"
    pattern: "root/{root_a_id}/items/{item_id}"
    pattern: "root/{root_b_id}/items/{item_id}"
  };
  string name = 1;
}

message AnotherMessage {
}

enum Enum {
  DEFAULT = 0; // First value must be 0 and is the default
}

message ValuesRequest {
  message NestedMessage {
  }
  enum NestedEnum {
    DEFAULT = 0; // First value must be 0 and is the default
  }

  double single_double = 1;
  float single_float = 2;
  int32 single_int32 = 3;
  int64 single_int64 = 4;
  uint32 single_uint32 = 5;
  uint64 single_uint64 = 6;
  sint32 single_sint32 = 7;
  sint64 single_sint64 = 8;
  fixed32 single_fixed32 = 9;
  fixed64 single_fixed64 = 10;
  sfixed32 single_sfixed32 = 11;
  sfixed64 single_sfixed64 = 12;
  bool single_bool = 13;
  string single_string = 14;
  bytes single_bytes = 15;
  AnotherMessage single_message = 16;
  NestedMessage single_nested_message = 17;
  Enum single_enum = 18;
  NestedEnum single_nested_enum = 19;
  repeated double repeated_double = 21;
  repeated float repeated_float = 22;
  repeated int32 repeated_int32 = 23;
  repeated int64 repeated_int64 = 24;
  repeated uint32 repeated_uint32 = 25;
  repeated uint64 repeated_uint64 = 26;
  repeated sint32 repeated_sint32 = 27;
  repeated sint64 repeated_sint64 = 28;
  repeated fixed32 repeated_fixed32 = 29;
  repeated fixed64 repeated_fixed64 = 30;
  repeated sfixed32 repeated_sfixed32 = 31;
  repeated sfixed64 repeated_sfixed64 = 32;
  repeated bool repeated_bool = 33;
  repeated string repeated_string = 34;
  repeated bytes repeated_bytes = 35;
  repeated AnotherMessage repeated_message = 36;
  repeated NestedMessage repeated_nested_message = 37;
  repeated Enum repeated_enum = 38;
  repeated NestedEnum repeated_nested_enum = 39;
  string single_resource_name = 40 [(google.api.resource_reference).type = "unittests.example.com/AResource"];
  repeated string repeated_resource_name = 41 [(google.api.resource_reference).type = "unittests.example.com/AResource"];
  string single_wildcard_resource = 42 [(google.api.resource_reference).type = "unittests.example.com/WildcardResource"];
  repeated string repeated_wildcard_resource = 43 [(google.api.resource_reference).type = "unittests.example.com/WildcardResource"];
  string multi_pattern_resource_name = 44 [(google.api.resource_reference).type = "unittests.example.com/MultiPatternResource"];
  repeated string repeated_multi_pattern_resource_name = 45 [(google.api.resource_reference).type = "unittests.example.com/MultiPatternResource"];
  map<int32, string> map_int_string = 46;
  string obsolete_field = 50 [deprecated = true];
  google.protobuf.DoubleValue single_wrapped_double = 60;
  google.protobuf.FloatValue single_wrapped_float = 61;
  google.protobuf.Int64Value single_wrapped_int64 = 62;
  google.protobuf.UInt64Value single_wrapped_uint64 = 63;
  google.protobuf.Int32Value single_wrapped_int32 = 64;
  google.protobuf.UInt32Value single_wrapped_uint32 = 65;
  google.protobuf.BoolValue single_wrapped_bool = 66;
  google.protobuf.StringValue single_wrapped_string = 67;
  google.protobuf.BytesValue single_wrapped_bytes = 68;
  repeated google.protobuf.DoubleValue repeated_wrapped_double = 70;
  repeated google.protobuf.FloatValue repeated_wrapped_float = 71;
  repeated google.protobuf.Int64Value repeated_wrapped_int64 = 72;
  repeated google.protobuf.UInt64Value repeated_wrapped_uint64 = 73;
  repeated google.protobuf.Int32Value repeated_wrapped_int32 = 74;
  repeated google.protobuf.UInt32Value repeated_wrapped_uint32 = 75;
  repeated google.protobuf.BoolValue repeated_wrapped_bool = 76;
  repeated google.protobuf.StringValue repeated_wrapped_string = 77;
  repeated google.protobuf.BytesValue repeated_wrapped_bytes = 78;
}

message Response {
}

message LroRequest {
}

message LroResponse {
}

message LroMetadata {
}
