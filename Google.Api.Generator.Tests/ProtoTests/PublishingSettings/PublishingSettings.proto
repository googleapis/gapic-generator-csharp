syntax = "proto3";

package testing.publishingsettings;

option csharp_namespace = "Testing.PublishingSettings";

import "google/api/client.proto";
import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/api/field_info.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/wrappers.proto";

// This is a resource definition we'll rename.
option (google.api.resource_definition) = {
  type: "test.googleapis.com/OriginalDatabase"
  pattern: "databases/{database}"
};

// This is a resource definition we'll ignore, using the common one instead.
option (google.api.resource_definition) = {
  type: "test.googleapis.com/Location"
  pattern: "projects/{project}/locations/{location}"
};

// This is a service we expect to be renamed.
service OriginalServiceName {
  // Test summary text for AMethod
  rpc AMethod(Request) returns(Response);
}

// This is a service with a handwritten signature.
service ServiceWithHandwrittenSignatures {
  // Test summary text for AMethod
  rpc AMethod(Request) returns (Response) {
    option (google.api.method_signature) = "string_1"; // This has a hand-written equivalent
    option (google.api.method_signature) = "string_1,string_2";
  }
}

// This is a service using resources.
service ServiceWithResources {
  // Test summary text for AMethod
  rpc AMethod(ResourceRequest) returns (Resource);
}

// This is a service with method settings in the service config.
service ServiceWithMethodSettings {
  // Test method
  rpc UnaryAutoPopulated(Request) returns (Response);
  // Test method
  rpc ServerStreamingAutoPopulated(Request) returns (stream Response);
  // Test method
  rpc ClientStreamingAutoPopulated(stream Request) returns (Response);
  // Test method
  rpc BidiStreamingAutoPopulated(stream Request) returns (stream Response);
  // Test method
  rpc LroAutoPopulated(Request) returns (google.longrunning.Operation) {
    option (google.longrunning.operation_info) = {
        response_type: "Response"
        metadata_type: "Response"
    };
  }
  // Test method
  rpc PaginatedAutoPopulated(PaginatedRequest) returns (PaginatedResponse);
}

// This is a service using the api_version extension.
service ServiceWithApiVersion {
  option (google.api.api_version) = "v1_20240313";
  // Test summary text for AMethod
  rpc AMethod(Request) returns(Response);
}

message Request {
  string string_1 = 1;
  string string_2 = 2;
  string request_id = 3 [
    (google.api.field_info).format = UUID4
  ];
  optional string request_id_with_presence = 4 [
    (google.api.field_info).format = UUID4
  ];
}

message Response {
}

message PaginatedRequest {
  string request_id = 1 [
    (google.api.field_info).format = UUID4
  ];
  int32 page_size = 2;
  string page_token = 3;
}

message PaginatedResponse {
  string next_page_token = 1;
  repeated Response responses = 2;
}

message ResourceRequest {
  string parent = 1 [
    (google.api.resource_reference) = { child_type: "test.googleapis.com/Resource" }
  ];

  string database = 2 [
    (google.api.resource_reference) = { type: "test.googleapis.com/OriginalDatabase" }
  ];
}

message Resource {
  option (google.api.resource) = {
    type: "test.googleapis.com/Resource"
    pattern: "projects/{project}/locations/{location}/resources/{resource}"
  };
  string name = 1;
}
