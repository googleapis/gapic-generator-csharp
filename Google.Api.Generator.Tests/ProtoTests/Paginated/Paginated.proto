syntax = "proto3";

package testing.paginated;

import "google/api/client.proto";
import "google/api/resource.proto";

service Paginated {
  option (google.api.default_host) = "paginated.example.com";

  // Test a paginated RPC with a method signature.
  rpc SignatureMethod(Request) returns(Response) {
    option (google.api.method_signature) = "a_string,a_number";
	// Following two signatures test a corner case in paginated snippet generation, where the snippet
	// for the second of these methods including the `pageToken` parameter is ambiguous with the first method.
    option (google.api.method_signature) = "a_string";
    option (google.api.method_signature) = "";
  }

  // Test a paginated RPC with a method signature that contains resource-names
  // in both the request and the response.
  rpc ResourcedMethod(ResourceRequest) returns(ResourceResponse) {
    option (google.api.method_signature) = "name";
  }
}

message Request {
  string a_string = 1;
  int32 a_number = 2;
  int32 page_size = 3;
  string page_token = 4;
}

message Response {
  string next_page_token = 1;
  repeated string results = 2;
}

message Resource {
  option (google.api.resource) = {
    type: "paginated.example.com/Resource"
    pattern: "items/{item_id}"
  };
  string name = 1;
}

message ResourceRequest {
  string name = 1 [(google.api.resource_reference).type = "paginated.example.com/Resource"];
  int32 page_size = 2;
  string page_token = 3;
}

message ResourceResponse {
  string next_page_token = 1;
  repeated string results = 2 [(google.api.resource_reference).type = "paginated.example.com/Resource"];
}
