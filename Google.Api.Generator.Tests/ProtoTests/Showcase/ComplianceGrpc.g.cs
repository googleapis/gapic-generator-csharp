// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/showcase/v1beta1/compliance.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Showcase.V1Beta1 {
  /// <summary>
  /// This service is used to test that GAPICs can transcode proto3 requests to
  /// REST format correctly for various types of HTTP annotations.
  /// </summary>
  public static partial class Compliance
  {
    static readonly string __ServiceName = "google.showcase.v1beta1.Compliance";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.RepeatRequest> __Marshaller_google_showcase_v1beta1_RepeatRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.RepeatRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.RepeatResponse> __Marshaller_google_showcase_v1beta1_RepeatResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.RepeatResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataBody = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataBody",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataBodyInfo = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataBodyInfo",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataQuery = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataQuery",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataSimplePath = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataSimplePath",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataPathResource = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataPathResource",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataPathTrailingResource = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataPathTrailingResource",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataBodyPut = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataBodyPut",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse> __Method_RepeatDataBodyPatch = new grpc::Method<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepeatDataBodyPatch",
        __Marshaller_google_showcase_v1beta1_RepeatRequest,
        __Marshaller_google_showcase_v1beta1_RepeatResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Showcase.V1Beta1.ComplianceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Compliance</summary>
    [grpc::BindServiceMethod(typeof(Compliance), "BindService")]
    public abstract partial class ComplianceBase
    {
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the entire request object in the REST body.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBody(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the a message-type field in the REST body. Per AIP-127, only
      /// top-level, non-repeated fields can be sent this way.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyInfo(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending all request fields as query parameters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataQuery(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending some parameters as "simple" path variables (i.e., of the form
      /// "/bar/{foo}" rather than "/{foo=bar/*}"), and the rest as query parameters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataSimplePath(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Same as RepeatDataSimplePath, but with a path resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Same as RepeatDataSimplePath, but with a trailing resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathTrailingResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PUT method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPut(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PATCH method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPatch(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Compliance</summary>
    public partial class ComplianceClient : grpc::ClientBase<ComplianceClient>
    {
      /// <summary>Creates a new client for Compliance</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ComplianceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Compliance that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ComplianceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ComplianceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ComplianceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the entire request object in the REST body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBody(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBody(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the entire request object in the REST body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBody(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataBody, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the entire request object in the REST body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the entire request object in the REST body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataBody, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the a message-type field in the REST body. Per AIP-127, only
      /// top-level, non-repeated fields can be sent this way.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyInfo(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the a message-type field in the REST body. Per AIP-127, only
      /// top-level, non-repeated fields can be sent this way.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyInfo(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataBodyInfo, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the a message-type field in the REST body. Per AIP-127, only
      /// top-level, non-repeated fields can be sent this way.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyInfoAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending the a message-type field in the REST body. Per AIP-127, only
      /// top-level, non-repeated fields can be sent this way.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyInfoAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataBodyInfo, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending all request fields as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataQuery(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending all request fields as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataQuery(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataQuery, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending all request fields as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataQueryAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending all request fields as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataQueryAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataQuery, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending some parameters as "simple" path variables (i.e., of the form
      /// "/bar/{foo}" rather than "/{foo=bar/*}"), and the rest as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataSimplePath(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataSimplePath(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending some parameters as "simple" path variables (i.e., of the form
      /// "/bar/{foo}" rather than "/{foo=bar/*}"), and the rest as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataSimplePath(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataSimplePath, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending some parameters as "simple" path variables (i.e., of the form
      /// "/bar/{foo}" rather than "/{foo=bar/*}"), and the rest as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataSimplePathAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataSimplePathAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request. This method exercises
      /// sending some parameters as "simple" path variables (i.e., of the form
      /// "/bar/{foo}" rather than "/{foo=bar/*}"), and the rest as query parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataSimplePathAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataSimplePath, null, options, request);
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a path resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataPathResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataPathResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a path resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataPathResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataPathResource, null, options, request);
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a path resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathResourceAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataPathResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a path resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathResourceAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataPathResource, null, options, request);
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a trailing resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataPathTrailingResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataPathTrailingResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a trailing resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataPathTrailingResource(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataPathTrailingResource, null, options, request);
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a trailing resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathTrailingResourceAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataPathTrailingResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Same as RepeatDataSimplePath, but with a trailing resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataPathTrailingResourceAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataPathTrailingResource, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PUT method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyPut(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyPut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PUT method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyPut(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataBodyPut, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PUT method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPutAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyPutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PUT method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPutAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataBodyPut, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PATCH method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyPatch(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyPatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PATCH method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.RepeatResponse RepeatDataBodyPatch(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RepeatDataBodyPatch, null, options, request);
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PATCH method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPatchAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RepeatDataBodyPatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method echoes the ComplianceData request, using the HTTP PATCH method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.RepeatResponse> RepeatDataBodyPatchAsync(global::Google.Showcase.V1Beta1.RepeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RepeatDataBodyPatch, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ComplianceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ComplianceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ComplianceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RepeatDataBody, serviceImpl.RepeatDataBody)
          .AddMethod(__Method_RepeatDataBodyInfo, serviceImpl.RepeatDataBodyInfo)
          .AddMethod(__Method_RepeatDataQuery, serviceImpl.RepeatDataQuery)
          .AddMethod(__Method_RepeatDataSimplePath, serviceImpl.RepeatDataSimplePath)
          .AddMethod(__Method_RepeatDataPathResource, serviceImpl.RepeatDataPathResource)
          .AddMethod(__Method_RepeatDataPathTrailingResource, serviceImpl.RepeatDataPathTrailingResource)
          .AddMethod(__Method_RepeatDataBodyPut, serviceImpl.RepeatDataBodyPut)
          .AddMethod(__Method_RepeatDataBodyPatch, serviceImpl.RepeatDataBodyPatch).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ComplianceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RepeatDataBody, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataBody));
      serviceBinder.AddMethod(__Method_RepeatDataBodyInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataBodyInfo));
      serviceBinder.AddMethod(__Method_RepeatDataQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataQuery));
      serviceBinder.AddMethod(__Method_RepeatDataSimplePath, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataSimplePath));
      serviceBinder.AddMethod(__Method_RepeatDataPathResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataPathResource));
      serviceBinder.AddMethod(__Method_RepeatDataPathTrailingResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataPathTrailingResource));
      serviceBinder.AddMethod(__Method_RepeatDataBodyPut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataBodyPut));
      serviceBinder.AddMethod(__Method_RepeatDataBodyPatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.RepeatRequest, global::Google.Showcase.V1Beta1.RepeatResponse>(serviceImpl.RepeatDataBodyPatch));
    }

  }
}
#endregion
