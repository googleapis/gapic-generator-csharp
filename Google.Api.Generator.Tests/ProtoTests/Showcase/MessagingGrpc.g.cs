// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/showcase/v1beta1/messaging.proto
// </auto-generated>
// Original file comments:
// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Showcase.V1Beta1 {
  /// <summary>
  /// A simple messaging service that implements chat rooms and profile posts.
  ///
  /// This messaging service showcases the features that API clients
  /// generated by gapic-generators implement.
  /// </summary>
  public static partial class Messaging
  {
    static readonly string __ServiceName = "google.showcase.v1beta1.Messaging";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.CreateRoomRequest> __Marshaller_google_showcase_v1beta1_CreateRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.CreateRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.Room> __Marshaller_google_showcase_v1beta1_Room = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.Room.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.GetRoomRequest> __Marshaller_google_showcase_v1beta1_GetRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.GetRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.UpdateRoomRequest> __Marshaller_google_showcase_v1beta1_UpdateRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.UpdateRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.DeleteRoomRequest> __Marshaller_google_showcase_v1beta1_DeleteRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.DeleteRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.ListRoomsRequest> __Marshaller_google_showcase_v1beta1_ListRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.ListRoomsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.ListRoomsResponse> __Marshaller_google_showcase_v1beta1_ListRoomsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.ListRoomsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.CreateBlurbRequest> __Marshaller_google_showcase_v1beta1_CreateBlurbRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.CreateBlurbRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.Blurb> __Marshaller_google_showcase_v1beta1_Blurb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.Blurb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.GetBlurbRequest> __Marshaller_google_showcase_v1beta1_GetBlurbRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.GetBlurbRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.UpdateBlurbRequest> __Marshaller_google_showcase_v1beta1_UpdateBlurbRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.UpdateBlurbRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.DeleteBlurbRequest> __Marshaller_google_showcase_v1beta1_DeleteBlurbRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.DeleteBlurbRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.ListBlurbsRequest> __Marshaller_google_showcase_v1beta1_ListBlurbsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.ListBlurbsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.ListBlurbsResponse> __Marshaller_google_showcase_v1beta1_ListBlurbsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.ListBlurbsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.SearchBlurbsRequest> __Marshaller_google_showcase_v1beta1_SearchBlurbsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.SearchBlurbsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.StreamBlurbsRequest> __Marshaller_google_showcase_v1beta1_StreamBlurbsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.StreamBlurbsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.StreamBlurbsResponse> __Marshaller_google_showcase_v1beta1_StreamBlurbsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.StreamBlurbsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.SendBlurbsResponse> __Marshaller_google_showcase_v1beta1_SendBlurbsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.SendBlurbsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Showcase.V1Beta1.ConnectRequest> __Marshaller_google_showcase_v1beta1_ConnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Showcase.V1Beta1.ConnectRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.CreateRoomRequest, global::Google.Showcase.V1Beta1.Room> __Method_CreateRoom = new grpc::Method<global::Google.Showcase.V1Beta1.CreateRoomRequest, global::Google.Showcase.V1Beta1.Room>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRoom",
        __Marshaller_google_showcase_v1beta1_CreateRoomRequest,
        __Marshaller_google_showcase_v1beta1_Room);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.GetRoomRequest, global::Google.Showcase.V1Beta1.Room> __Method_GetRoom = new grpc::Method<global::Google.Showcase.V1Beta1.GetRoomRequest, global::Google.Showcase.V1Beta1.Room>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoom",
        __Marshaller_google_showcase_v1beta1_GetRoomRequest,
        __Marshaller_google_showcase_v1beta1_Room);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.UpdateRoomRequest, global::Google.Showcase.V1Beta1.Room> __Method_UpdateRoom = new grpc::Method<global::Google.Showcase.V1Beta1.UpdateRoomRequest, global::Google.Showcase.V1Beta1.Room>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRoom",
        __Marshaller_google_showcase_v1beta1_UpdateRoomRequest,
        __Marshaller_google_showcase_v1beta1_Room);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.DeleteRoomRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRoom = new grpc::Method<global::Google.Showcase.V1Beta1.DeleteRoomRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoom",
        __Marshaller_google_showcase_v1beta1_DeleteRoomRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.ListRoomsRequest, global::Google.Showcase.V1Beta1.ListRoomsResponse> __Method_ListRooms = new grpc::Method<global::Google.Showcase.V1Beta1.ListRoomsRequest, global::Google.Showcase.V1Beta1.ListRoomsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRooms",
        __Marshaller_google_showcase_v1beta1_ListRoomsRequest,
        __Marshaller_google_showcase_v1beta1_ListRoomsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb> __Method_CreateBlurb = new grpc::Method<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBlurb",
        __Marshaller_google_showcase_v1beta1_CreateBlurbRequest,
        __Marshaller_google_showcase_v1beta1_Blurb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.GetBlurbRequest, global::Google.Showcase.V1Beta1.Blurb> __Method_GetBlurb = new grpc::Method<global::Google.Showcase.V1Beta1.GetBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlurb",
        __Marshaller_google_showcase_v1beta1_GetBlurbRequest,
        __Marshaller_google_showcase_v1beta1_Blurb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.UpdateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb> __Method_UpdateBlurb = new grpc::Method<global::Google.Showcase.V1Beta1.UpdateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBlurb",
        __Marshaller_google_showcase_v1beta1_UpdateBlurbRequest,
        __Marshaller_google_showcase_v1beta1_Blurb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.DeleteBlurbRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBlurb = new grpc::Method<global::Google.Showcase.V1Beta1.DeleteBlurbRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBlurb",
        __Marshaller_google_showcase_v1beta1_DeleteBlurbRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.ListBlurbsRequest, global::Google.Showcase.V1Beta1.ListBlurbsResponse> __Method_ListBlurbs = new grpc::Method<global::Google.Showcase.V1Beta1.ListBlurbsRequest, global::Google.Showcase.V1Beta1.ListBlurbsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBlurbs",
        __Marshaller_google_showcase_v1beta1_ListBlurbsRequest,
        __Marshaller_google_showcase_v1beta1_ListBlurbsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.SearchBlurbsRequest, global::Google.LongRunning.Operation> __Method_SearchBlurbs = new grpc::Method<global::Google.Showcase.V1Beta1.SearchBlurbsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchBlurbs",
        __Marshaller_google_showcase_v1beta1_SearchBlurbsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.StreamBlurbsRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse> __Method_StreamBlurbs = new grpc::Method<global::Google.Showcase.V1Beta1.StreamBlurbsRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "StreamBlurbs",
        __Marshaller_google_showcase_v1beta1_StreamBlurbsRequest,
        __Marshaller_google_showcase_v1beta1_StreamBlurbsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.SendBlurbsResponse> __Method_SendBlurbs = new grpc::Method<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.SendBlurbsResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "SendBlurbs",
        __Marshaller_google_showcase_v1beta1_CreateBlurbRequest,
        __Marshaller_google_showcase_v1beta1_SendBlurbsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Showcase.V1Beta1.ConnectRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse> __Method_Connect = new grpc::Method<global::Google.Showcase.V1Beta1.ConnectRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "Connect",
        __Marshaller_google_showcase_v1beta1_ConnectRequest,
        __Marshaller_google_showcase_v1beta1_StreamBlurbsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Showcase.V1Beta1.MessagingReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Messaging</summary>
    [grpc::BindServiceMethod(typeof(Messaging), "BindService")]
    public abstract partial class MessagingBase
    {
      /// <summary>
      /// Creates a room.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Room> CreateRoom(global::Google.Showcase.V1Beta1.CreateRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the Room with the given resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Room> GetRoom(global::Google.Showcase.V1Beta1.GetRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a room.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Room> UpdateRoom(global::Google.Showcase.V1Beta1.UpdateRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a room and all of its blurbs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRoom(global::Google.Showcase.V1Beta1.DeleteRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all chat rooms.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.ListRoomsResponse> ListRooms(global::Google.Showcase.V1Beta1.ListRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a blurb. If the parent is a room, the blurb is understood to be a
      /// message in that room. If the parent is a profile, the blurb is understood
      /// to be a post on the profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Blurb> CreateBlurb(global::Google.Showcase.V1Beta1.CreateBlurbRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the Blurb with the given resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Blurb> GetBlurb(global::Google.Showcase.V1Beta1.GetBlurbRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a blurb.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.Blurb> UpdateBlurb(global::Google.Showcase.V1Beta1.UpdateBlurbRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a blurb.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBlurb(global::Google.Showcase.V1Beta1.DeleteBlurbRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists blurbs for a specific chat room or user profile depending on the
      /// parent resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.ListBlurbsResponse> ListBlurbs(global::Google.Showcase.V1Beta1.ListBlurbsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method searches through all blurbs across all rooms and profiles
      /// for blurbs containing to words found in the query. Only posts that
      /// contain an exact match of a queried word will be returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SearchBlurbs(global::Google.Showcase.V1Beta1.SearchBlurbsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This returns a stream that emits the blurbs that are created for a
      /// particular chat room or user profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task StreamBlurbs(global::Google.Showcase.V1Beta1.StreamBlurbsRequest request, grpc::IServerStreamWriter<global::Google.Showcase.V1Beta1.StreamBlurbsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This is a stream to create multiple blurbs. If an invalid blurb is
      /// requested to be created, the stream will close with an error.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Showcase.V1Beta1.SendBlurbsResponse> SendBlurbs(grpc::IAsyncStreamReader<global::Google.Showcase.V1Beta1.CreateBlurbRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method starts a bidirectional stream that receives all blurbs that
      /// are being created after the stream has started and sends requests to create
      /// blurbs. If an invalid blurb is requested to be created, the stream will
      /// close with an error.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Connect(grpc::IAsyncStreamReader<global::Google.Showcase.V1Beta1.ConnectRequest> requestStream, grpc::IServerStreamWriter<global::Google.Showcase.V1Beta1.StreamBlurbsResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Messaging</summary>
    public partial class MessagingClient : grpc::ClientBase<MessagingClient>
    {
      /// <summary>Creates a new client for Messaging</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MessagingClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Messaging that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MessagingClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MessagingClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MessagingClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room CreateRoom(global::Google.Showcase.V1Beta1.CreateRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room CreateRoom(global::Google.Showcase.V1Beta1.CreateRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRoom, null, options, request);
      }
      /// <summary>
      /// Creates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> CreateRoomAsync(global::Google.Showcase.V1Beta1.CreateRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> CreateRoomAsync(global::Google.Showcase.V1Beta1.CreateRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRoom, null, options, request);
      }
      /// <summary>
      /// Retrieves the Room with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room GetRoom(global::Google.Showcase.V1Beta1.GetRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the Room with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room GetRoom(global::Google.Showcase.V1Beta1.GetRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoom, null, options, request);
      }
      /// <summary>
      /// Retrieves the Room with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> GetRoomAsync(global::Google.Showcase.V1Beta1.GetRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the Room with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> GetRoomAsync(global::Google.Showcase.V1Beta1.GetRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoom, null, options, request);
      }
      /// <summary>
      /// Updates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room UpdateRoom(global::Google.Showcase.V1Beta1.UpdateRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Room UpdateRoom(global::Google.Showcase.V1Beta1.UpdateRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRoom, null, options, request);
      }
      /// <summary>
      /// Updates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> UpdateRoomAsync(global::Google.Showcase.V1Beta1.UpdateRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a room.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Room> UpdateRoomAsync(global::Google.Showcase.V1Beta1.UpdateRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRoom, null, options, request);
      }
      /// <summary>
      /// Deletes a room and all of its blurbs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRoom(global::Google.Showcase.V1Beta1.DeleteRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a room and all of its blurbs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRoom(global::Google.Showcase.V1Beta1.DeleteRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRoom, null, options, request);
      }
      /// <summary>
      /// Deletes a room and all of its blurbs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRoomAsync(global::Google.Showcase.V1Beta1.DeleteRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a room and all of its blurbs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRoomAsync(global::Google.Showcase.V1Beta1.DeleteRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRoom, null, options, request);
      }
      /// <summary>
      /// Lists all chat rooms.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.ListRoomsResponse ListRooms(global::Google.Showcase.V1Beta1.ListRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRooms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all chat rooms.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.ListRoomsResponse ListRooms(global::Google.Showcase.V1Beta1.ListRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRooms, null, options, request);
      }
      /// <summary>
      /// Lists all chat rooms.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.ListRoomsResponse> ListRoomsAsync(global::Google.Showcase.V1Beta1.ListRoomsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRoomsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all chat rooms.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.ListRoomsResponse> ListRoomsAsync(global::Google.Showcase.V1Beta1.ListRoomsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRooms, null, options, request);
      }
      /// <summary>
      /// Creates a blurb. If the parent is a room, the blurb is understood to be a
      /// message in that room. If the parent is a profile, the blurb is understood
      /// to be a post on the profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb CreateBlurb(global::Google.Showcase.V1Beta1.CreateBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBlurb(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a blurb. If the parent is a room, the blurb is understood to be a
      /// message in that room. If the parent is a profile, the blurb is understood
      /// to be a post on the profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb CreateBlurb(global::Google.Showcase.V1Beta1.CreateBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBlurb, null, options, request);
      }
      /// <summary>
      /// Creates a blurb. If the parent is a room, the blurb is understood to be a
      /// message in that room. If the parent is a profile, the blurb is understood
      /// to be a post on the profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> CreateBlurbAsync(global::Google.Showcase.V1Beta1.CreateBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBlurbAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a blurb. If the parent is a room, the blurb is understood to be a
      /// message in that room. If the parent is a profile, the blurb is understood
      /// to be a post on the profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> CreateBlurbAsync(global::Google.Showcase.V1Beta1.CreateBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBlurb, null, options, request);
      }
      /// <summary>
      /// Retrieves the Blurb with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb GetBlurb(global::Google.Showcase.V1Beta1.GetBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlurb(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the Blurb with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb GetBlurb(global::Google.Showcase.V1Beta1.GetBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlurb, null, options, request);
      }
      /// <summary>
      /// Retrieves the Blurb with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> GetBlurbAsync(global::Google.Showcase.V1Beta1.GetBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlurbAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the Blurb with the given resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> GetBlurbAsync(global::Google.Showcase.V1Beta1.GetBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlurb, null, options, request);
      }
      /// <summary>
      /// Updates a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb UpdateBlurb(global::Google.Showcase.V1Beta1.UpdateBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBlurb(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.Blurb UpdateBlurb(global::Google.Showcase.V1Beta1.UpdateBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBlurb, null, options, request);
      }
      /// <summary>
      /// Updates a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> UpdateBlurbAsync(global::Google.Showcase.V1Beta1.UpdateBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBlurbAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.Blurb> UpdateBlurbAsync(global::Google.Showcase.V1Beta1.UpdateBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBlurb, null, options, request);
      }
      /// <summary>
      /// Deletes a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBlurb(global::Google.Showcase.V1Beta1.DeleteBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBlurb(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBlurb(global::Google.Showcase.V1Beta1.DeleteBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBlurb, null, options, request);
      }
      /// <summary>
      /// Deletes a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBlurbAsync(global::Google.Showcase.V1Beta1.DeleteBlurbRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBlurbAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a blurb.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBlurbAsync(global::Google.Showcase.V1Beta1.DeleteBlurbRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBlurb, null, options, request);
      }
      /// <summary>
      /// Lists blurbs for a specific chat room or user profile depending on the
      /// parent resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.ListBlurbsResponse ListBlurbs(global::Google.Showcase.V1Beta1.ListBlurbsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBlurbs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists blurbs for a specific chat room or user profile depending on the
      /// parent resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Showcase.V1Beta1.ListBlurbsResponse ListBlurbs(global::Google.Showcase.V1Beta1.ListBlurbsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBlurbs, null, options, request);
      }
      /// <summary>
      /// Lists blurbs for a specific chat room or user profile depending on the
      /// parent resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.ListBlurbsResponse> ListBlurbsAsync(global::Google.Showcase.V1Beta1.ListBlurbsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBlurbsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists blurbs for a specific chat room or user profile depending on the
      /// parent resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Showcase.V1Beta1.ListBlurbsResponse> ListBlurbsAsync(global::Google.Showcase.V1Beta1.ListBlurbsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBlurbs, null, options, request);
      }
      /// <summary>
      /// This method searches through all blurbs across all rooms and profiles
      /// for blurbs containing to words found in the query. Only posts that
      /// contain an exact match of a queried word will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SearchBlurbs(global::Google.Showcase.V1Beta1.SearchBlurbsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchBlurbs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method searches through all blurbs across all rooms and profiles
      /// for blurbs containing to words found in the query. Only posts that
      /// contain an exact match of a queried word will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SearchBlurbs(global::Google.Showcase.V1Beta1.SearchBlurbsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchBlurbs, null, options, request);
      }
      /// <summary>
      /// This method searches through all blurbs across all rooms and profiles
      /// for blurbs containing to words found in the query. Only posts that
      /// contain an exact match of a queried word will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SearchBlurbsAsync(global::Google.Showcase.V1Beta1.SearchBlurbsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchBlurbsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method searches through all blurbs across all rooms and profiles
      /// for blurbs containing to words found in the query. Only posts that
      /// contain an exact match of a queried word will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SearchBlurbsAsync(global::Google.Showcase.V1Beta1.SearchBlurbsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchBlurbs, null, options, request);
      }
      /// <summary>
      /// This returns a stream that emits the blurbs that are created for a
      /// particular chat room or user profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Showcase.V1Beta1.StreamBlurbsResponse> StreamBlurbs(global::Google.Showcase.V1Beta1.StreamBlurbsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamBlurbs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This returns a stream that emits the blurbs that are created for a
      /// particular chat room or user profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Showcase.V1Beta1.StreamBlurbsResponse> StreamBlurbs(global::Google.Showcase.V1Beta1.StreamBlurbsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_StreamBlurbs, null, options, request);
      }
      /// <summary>
      /// This is a stream to create multiple blurbs. If an invalid blurb is
      /// requested to be created, the stream will close with an error.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.SendBlurbsResponse> SendBlurbs(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendBlurbs(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This is a stream to create multiple blurbs. If an invalid blurb is
      /// requested to be created, the stream will close with an error.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.SendBlurbsResponse> SendBlurbs(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_SendBlurbs, null, options);
      }
      /// <summary>
      /// This method starts a bidirectional stream that receives all blurbs that
      /// are being created after the stream has started and sends requests to create
      /// blurbs. If an invalid blurb is requested to be created, the stream will
      /// close with an error.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Showcase.V1Beta1.ConnectRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse> Connect(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method starts a bidirectional stream that receives all blurbs that
      /// are being created after the stream has started and sends requests to create
      /// blurbs. If an invalid blurb is requested to be created, the stream will
      /// close with an error.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Showcase.V1Beta1.ConnectRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse> Connect(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_Connect, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MessagingClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MessagingClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MessagingBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateRoom, serviceImpl.CreateRoom)
          .AddMethod(__Method_GetRoom, serviceImpl.GetRoom)
          .AddMethod(__Method_UpdateRoom, serviceImpl.UpdateRoom)
          .AddMethod(__Method_DeleteRoom, serviceImpl.DeleteRoom)
          .AddMethod(__Method_ListRooms, serviceImpl.ListRooms)
          .AddMethod(__Method_CreateBlurb, serviceImpl.CreateBlurb)
          .AddMethod(__Method_GetBlurb, serviceImpl.GetBlurb)
          .AddMethod(__Method_UpdateBlurb, serviceImpl.UpdateBlurb)
          .AddMethod(__Method_DeleteBlurb, serviceImpl.DeleteBlurb)
          .AddMethod(__Method_ListBlurbs, serviceImpl.ListBlurbs)
          .AddMethod(__Method_SearchBlurbs, serviceImpl.SearchBlurbs)
          .AddMethod(__Method_StreamBlurbs, serviceImpl.StreamBlurbs)
          .AddMethod(__Method_SendBlurbs, serviceImpl.SendBlurbs)
          .AddMethod(__Method_Connect, serviceImpl.Connect).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MessagingBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.CreateRoomRequest, global::Google.Showcase.V1Beta1.Room>(serviceImpl.CreateRoom));
      serviceBinder.AddMethod(__Method_GetRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.GetRoomRequest, global::Google.Showcase.V1Beta1.Room>(serviceImpl.GetRoom));
      serviceBinder.AddMethod(__Method_UpdateRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.UpdateRoomRequest, global::Google.Showcase.V1Beta1.Room>(serviceImpl.UpdateRoom));
      serviceBinder.AddMethod(__Method_DeleteRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.DeleteRoomRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRoom));
      serviceBinder.AddMethod(__Method_ListRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.ListRoomsRequest, global::Google.Showcase.V1Beta1.ListRoomsResponse>(serviceImpl.ListRooms));
      serviceBinder.AddMethod(__Method_CreateBlurb, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(serviceImpl.CreateBlurb));
      serviceBinder.AddMethod(__Method_GetBlurb, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.GetBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(serviceImpl.GetBlurb));
      serviceBinder.AddMethod(__Method_UpdateBlurb, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.UpdateBlurbRequest, global::Google.Showcase.V1Beta1.Blurb>(serviceImpl.UpdateBlurb));
      serviceBinder.AddMethod(__Method_DeleteBlurb, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.DeleteBlurbRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBlurb));
      serviceBinder.AddMethod(__Method_ListBlurbs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.ListBlurbsRequest, global::Google.Showcase.V1Beta1.ListBlurbsResponse>(serviceImpl.ListBlurbs));
      serviceBinder.AddMethod(__Method_SearchBlurbs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Showcase.V1Beta1.SearchBlurbsRequest, global::Google.LongRunning.Operation>(serviceImpl.SearchBlurbs));
      serviceBinder.AddMethod(__Method_StreamBlurbs, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Showcase.V1Beta1.StreamBlurbsRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse>(serviceImpl.StreamBlurbs));
      serviceBinder.AddMethod(__Method_SendBlurbs, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Google.Showcase.V1Beta1.CreateBlurbRequest, global::Google.Showcase.V1Beta1.SendBlurbsResponse>(serviceImpl.SendBlurbs));
      serviceBinder.AddMethod(__Method_Connect, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Google.Showcase.V1Beta1.ConnectRequest, global::Google.Showcase.V1Beta1.StreamBlurbsResponse>(serviceImpl.Connect));
    }

  }
}
#endregion
