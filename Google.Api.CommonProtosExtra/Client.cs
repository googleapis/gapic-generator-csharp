// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Api {

  /// <summary>Holder for reflection information generated from google/api/client.proto</summary>
  public static partial class ClientReflection {

    #region Descriptor
    /// <summary>File descriptor for google/api/client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdnb29nbGUvYXBpL2NsaWVudC5wcm90bxIKZ29vZ2xlLmFwaRogZ29vZ2xl",
            "L3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8iUwoHUGFja2FnZRINCgV0aXRs",
            "ZRgBIAEoCRIRCgluYW1lc3BhY2UYAiADKAkSDwoHdmVyc2lvbhgDIAEoCRIV",
            "Cg1wcm9kdWN0X3RpdGxlGAQgASgJOkoKDmNsaWVudF9wYWNrYWdlEhwuZ29v",
            "Z2xlLnByb3RvYnVmLkZpbGVPcHRpb25zGJgIIAEoCzITLmdvb2dsZS5hcGku",
            "UGFja2FnZTo2CgxkZWZhdWx0X2hvc3QSHy5nb29nbGUucHJvdG9idWYuU2Vy",
            "dmljZU9wdGlvbnMYmQggASgJOjYKDG9hdXRoX3Njb3BlcxIfLmdvb2dsZS5w",
            "cm90b2J1Zi5TZXJ2aWNlT3B0aW9ucxiaCCABKAk6OQoQbWV0aG9kX3NpZ25h",
            "dHVyZRIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGJsIIAMoCUJp",
            "Cg5jb20uZ29vZ2xlLmFwaUILQ2xpZW50UHJvdG9QAVpBZ29vZ2xlLmdvbGFu",
            "Zy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hcGkvYW5ub3RhdGlvbnM7YW5u",
            "b3RhdGlvbnOiAgRHQVBJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { pbr::FileDescriptor.DescriptorProtoFileDescriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.Package), global::Google.Api.Package.Parser, new[]{ "Title", "Namespace", "Version", "ProductTitle" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Information about the API as a whole.
  /// This is generally used for client library packaging and documentation, and
  /// only needs to be set when correct values can not be inferred from the proto
  /// package.
  ///
  /// For example, Pub/Sub sets this to:
  ///
  ///     option (google.api.package) = {
  ///       title: "Pub/Sub"
  ///       namespace: ["Google", "Cloud"]
  ///       version: "v1"
  ///     };
  ///
  /// If this is set, then the `title`, `namespace`, and `version` fields
  /// should all be set.
  /// </summary>
  public sealed partial class Package : pb::IMessage<Package> {
    private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Package> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.ClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package(Package other) : this() {
      title_ = other.title_;
      namespace_ = other.namespace_.Clone();
      version_ = other.version_;
      productTitle_ = other.productTitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Package Clone() {
      return new Package(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    /// <summary>
    /// Required. The title of the package (and, by default, the product).
    ///
    /// This should be set to the colloquial name of the API, and is used
    /// for things such as determining the package name.
    ///
    /// Specify this in appropriate title casing, with space as the word
    /// separator (e.g. "Speech", "BigQuery", "Video Intelligence", "Pub/Sub").
    ///
    /// This value may be used as-is in documentation, and code generators should
    /// normalize it appropriately for idiomatic package, module, etc. names in
    /// their language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_namespace_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> namespace_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The namespace.
    ///
    /// This should be set to the package namespace, using appropriate title
    /// casing (the same casing as `title`, above). Client libraries
    /// should normalize it appropriately for package, module, etc. names in
    /// their language.
    ///
    ///   Example: ["Google", "Cloud"]
    ///
    /// This is used to inform the prefix for package manager names, and the code
    /// layout in cases where the language-specific protobuf options are not set.
    ///
    /// The "required" note above is "soft". This *should* be set, but an empty
    /// namespace is technically valid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Namespace {
      get { return namespace_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    /// Required. The version.
    /// This should be set to the API version, such as "v1".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_title" field.</summary>
    public const int ProductTitleFieldNumber = 4;
    private string productTitle_ = "";
    /// <summary>
    /// The title of the product, if different from the package title above.
    /// This may be used in documentation and package metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductTitle {
      get { return productTitle_; }
      set {
        productTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Package);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Package other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if(!namespace_.Equals(other.namespace_)) return false;
      if (Version != other.Version) return false;
      if (ProductTitle != other.ProductTitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= namespace_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (ProductTitle.Length != 0) hash ^= ProductTitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      namespace_.WriteTo(output, _repeated_namespace_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (ProductTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProductTitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += namespace_.CalculateSize(_repeated_namespace_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (ProductTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductTitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Package other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      namespace_.Add(other.namespace_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.ProductTitle.Length != 0) {
        ProductTitle = other.ProductTitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            namespace_.AddEntriesFrom(input, _repeated_namespace_codec);
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            ProductTitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
