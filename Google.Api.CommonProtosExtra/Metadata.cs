// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Api {

  /// <summary>Holder for reflection information generated from google/api/metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/api/metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlnb29nbGUvYXBpL21ldGFkYXRhLnByb3RvEgpnb29nbGUuYXBpGiBnb29n",
            "bGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90byJmCghNZXRhZGF0YRIUCgxw",
            "cm9kdWN0X25hbWUYASABKAkSEwoLcHJvZHVjdF91cmkYAiABKAkSFAoMcGFj",
            "a2FnZV9uYW1lGAMgASgJEhkKEXBhY2thZ2VfbmFtZXNwYWNlGAQgAygJIhcK",
            "BU9BdXRoEg4KBnNjb3BlcxgBIAMoCUJkCg5jb20uZ29vZ2xlLmFwaUINTWV0",
            "YWRhdGFQcm90b1ABWkFnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29n",
            "bGVhcGlzL2FwaS9hbm5vdGF0aW9uczthbm5vdGF0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { pbr::FileDescriptor.DescriptorProtoFileDescriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.Metadata), global::Google.Api.Metadata.Parser, new[]{ "ProductName", "ProductUri", "PackageName", "PackageNamespace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.OAuth), global::Google.Api.OAuth.Parser, new[]{ "Scopes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Information about the API as a whole. Generally used for packaging
  /// and documentation.
  /// </summary>
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      productName_ = other.productName_;
      productUri_ = other.productUri_;
      packageName_ = other.packageName_;
      packageNamespace_ = other.packageNamespace_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "product_name" field.</summary>
    public const int ProductNameFieldNumber = 1;
    private string productName_ = "";
    /// <summary>
    /// The name of the product.
    ///
    /// This should be set to the colloquial name of the API, and is used
    /// for things such as determining the package name. If not set, it is
    /// inferred based on the final proto package segment before the version.
    ///
    /// Specify this in appropriate title casing, with space as the word
    /// separator (e.g. "Speech", "BigQuery", "Video Intelligence").
    ///
    /// This value may be used as-is in documentation, and code generators should
    /// normalize it appropriately for idiomatic package, module, etc. names in
    /// their language. However, this value is superseded by the language specific
    /// options introduced for some languages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductName {
      get { return productName_; }
      set {
        productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_uri" field.</summary>
    public const int ProductUriFieldNumber = 2;
    private string productUri_ = "";
    /// <summary>
    /// The URI for this product.
    /// This may be used in documentation and package metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductUri {
      get { return productUri_; }
      set {
        productUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_name" field.</summary>
    public const int PackageNameFieldNumber = 3;
    private string packageName_ = "";
    /// <summary>
    /// The name of the client library package, if it differs from the
    /// product name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package_namespace" field.</summary>
    public const int PackageNamespaceFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_packageNamespace_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> packageNamespace_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The namespace.
    ///
    /// This should be set to the package namespace, using appropriate title
    /// casing. Translators should normalize it appropriately for package, module,
    /// etc. names in their language.
    ///
    /// If not set, this is inferred from the proto package (all segments
    /// prior to the segment that determines `api_name`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PackageNamespace {
      get { return packageNamespace_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductName != other.ProductName) return false;
      if (ProductUri != other.ProductUri) return false;
      if (PackageName != other.PackageName) return false;
      if(!packageNamespace_.Equals(other.packageNamespace_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductName.Length != 0) hash ^= ProductName.GetHashCode();
      if (ProductUri.Length != 0) hash ^= ProductUri.GetHashCode();
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      hash ^= packageNamespace_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductName);
      }
      if (ProductUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductUri);
      }
      if (PackageName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PackageName);
      }
      packageNamespace_.WriteTo(output, _repeated_packageNamespace_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductName);
      }
      if (ProductUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductUri);
      }
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      size += packageNamespace_.CalculateSize(_repeated_packageNamespace_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.ProductName.Length != 0) {
        ProductName = other.ProductName;
      }
      if (other.ProductUri.Length != 0) {
        ProductUri = other.ProductUri;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      packageNamespace_.Add(other.packageNamespace_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductName = input.ReadString();
            break;
          }
          case 18: {
            ProductUri = input.ReadString();
            break;
          }
          case 26: {
            PackageName = input.ReadString();
            break;
          }
          case 34: {
            packageNamespace_.AddEntriesFrom(input, _repeated_packageNamespace_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Information about OAuth.
  /// </summary>
  public sealed partial class OAuth : pb::IMessage<OAuth> {
    private static readonly pb::MessageParser<OAuth> _parser = new pb::MessageParser<OAuth>(() => new OAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.MetadataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth(OAuth other) : this() {
      scopes_ = other.scopes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth Clone() {
      return new OAuth(this);
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The set of OAuth scopes needed to be able to successfully call any RPC
    /// on the service. These are generally specified as a URL, for example:
    /// "https://www.googleapis.com/auth/cloud-platform"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!scopes_.Equals(other.scopes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= scopes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OAuth other) {
      if (other == null) {
        return;
      }
      scopes_.Add(other.scopes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
