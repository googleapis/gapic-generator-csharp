// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gapic/metadata/gapic_metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Gapic.Metadata {

  /// <summary>Holder for reflection information generated from gapic/metadata/gapic_metadata.proto</summary>
  public static partial class GapicMetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for gapic/metadata/gapic_metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GapicMetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnYXBpYy9tZXRhZGF0YS9nYXBpY19tZXRhZGF0YS5wcm90bxIVZ29vZ2xl",
            "LmdhcGljLm1ldGFkYXRhIvAFCg1HYXBpY01ldGFkYXRhEg4KBnNjaGVtYRgB",
            "IAEoCRIPCgdjb21tZW50GAIgASgJEhAKCGxhbmd1YWdlGAMgASgJEhUKDXBy",
            "b3RvX3BhY2thZ2UYBCABKAkSFwoPbGlicmFyeV9wYWNrYWdlGAUgASgJEkQK",
            "CHNlcnZpY2VzGAYgAygLMjIuZ29vZ2xlLmdhcGljLm1ldGFkYXRhLkdhcGlj",
            "TWV0YWRhdGEuU2VydmljZXNFbnRyeRppCg1TZXJ2aWNlc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRJHCgV2YWx1ZRgCIAEoCzI4Lmdvb2dsZS5nYXBpYy5tZXRhZGF0",
            "YS5HYXBpY01ldGFkYXRhLlNlcnZpY2VGb3JUcmFuc3BvcnQ6AjgBGtMBChNT",
            "ZXJ2aWNlRm9yVHJhbnNwb3J0ElYKB2NsaWVudHMYASADKAsyRS5nb29nbGUu",
            "Z2FwaWMubWV0YWRhdGEuR2FwaWNNZXRhZGF0YS5TZXJ2aWNlRm9yVHJhbnNw",
            "b3J0LkNsaWVudHNFbnRyeRpkCgxDbGllbnRzRW50cnkSCwoDa2V5GAEgASgJ",
            "EkMKBXZhbHVlGAIgASgLMjQuZ29vZ2xlLmdhcGljLm1ldGFkYXRhLkdhcGlj",
            "TWV0YWRhdGEuU2VydmljZUFzQ2xpZW50OgI4ARrVAQoPU2VydmljZUFzQ2xp",
            "ZW50EhYKDmxpYnJhcnlfY2xpZW50GAEgASgJEkwKBHJwY3MYAiADKAsyPi5n",
            "b29nbGUuZ2FwaWMubWV0YWRhdGEuR2FwaWNNZXRhZGF0YS5TZXJ2aWNlQXND",
            "bGllbnQuUnBjc0VudHJ5GlwKCVJwY3NFbnRyeRILCgNrZXkYASABKAkSPgoF",
            "dmFsdWUYAiABKAsyLy5nb29nbGUuZ2FwaWMubWV0YWRhdGEuR2FwaWNNZXRh",
            "ZGF0YS5NZXRob2RMaXN0OgI4ARodCgpNZXRob2RMaXN0Eg8KB21ldGhvZHMY",
            "ASADKAlCugEKGWNvbS5nb29nbGUuZ2FwaWMubWV0YWRhdGFCEkdhcGljTWV0",
            "YWRhdGFQcm90b1ABWj1nb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29n",
            "bGVhcGlzL2dhcGljL21ldGFkYXRhO21ldGFkYXRhqgIVR29vZ2xlLkdhcGlj",
            "Lk1ldGFkYXRhygIVR29vZ2xlXEdhcGljXE1ldGFkYXRh6gIXR29vZ2xlOjpH",
            "YXBpYzo6TWV0YWRhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Gapic.Metadata.GapicMetadata), global::Google.Gapic.Metadata.GapicMetadata.Parser, new[]{ "Schema", "Comment", "Language", "ProtoPackage", "LibraryPackage", "Services" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport), global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport.Parser, new[]{ "Clients" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient), global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient.Parser, new[]{ "LibraryClient", "Rpcs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList), global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList.Parser, new[]{ "Methods" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Metadata about a GAPIC library for a specific combination of API, version, and
  /// computer language.
  /// </summary>
  public sealed partial class GapicMetadata : pb::IMessage<GapicMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GapicMetadata> _parser = new pb::MessageParser<GapicMetadata>(() => new GapicMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GapicMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Gapic.Metadata.GapicMetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GapicMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GapicMetadata(GapicMetadata other) : this() {
      schema_ = other.schema_;
      comment_ = other.comment_;
      language_ = other.language_;
      protoPackage_ = other.protoPackage_;
      libraryPackage_ = other.libraryPackage_;
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GapicMetadata Clone() {
      return new GapicMetadata(this);
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 1;
    private string schema_ = "";
    /// <summary>
    /// Schema version of this proto. Current value: 1.0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schema {
      get { return schema_; }
      set {
        schema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 2;
    private string comment_ = "";
    /// <summary>
    /// Any human-readable comments to be included in this file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private string language_ = "";
    /// <summary>
    /// Computer language of this generated language. This must be
    /// spelled out as it spoken in English, with no capitalization or
    /// separators (e.g. "csharp", "nodejs").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proto_package" field.</summary>
    public const int ProtoPackageFieldNumber = 4;
    private string protoPackage_ = "";
    /// <summary>
    /// The proto package containing the API definition for which this
    /// GAPIC library was generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtoPackage {
      get { return protoPackage_; }
      set {
        protoPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "library_package" field.</summary>
    public const int LibraryPackageFieldNumber = 5;
    private string libraryPackage_ = "";
    /// <summary>
    /// The language-specific library package for this GAPIC library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LibraryPackage {
      get { return libraryPackage_; }
      set {
        libraryPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport>.Codec _map_services_codec
        = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport.Parser), 50);
    private readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport> services_ = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport>();
    /// <summary>
    /// A map from each proto-defined service to ServiceForTransports,
    /// which allows listing information about transport-specific
    /// implementations of the service.
    ///
    /// The key is the name of the service as it appears in the .proto
    /// file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceForTransport> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GapicMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GapicMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Schema != other.Schema) return false;
      if (Comment != other.Comment) return false;
      if (Language != other.Language) return false;
      if (ProtoPackage != other.ProtoPackage) return false;
      if (LibraryPackage != other.LibraryPackage) return false;
      if (!Services.Equals(other.Services)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Schema.Length != 0) hash ^= Schema.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (ProtoPackage.Length != 0) hash ^= ProtoPackage.GetHashCode();
      if (LibraryPackage.Length != 0) hash ^= LibraryPackage.GetHashCode();
      hash ^= Services.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Schema.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Schema);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Comment);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (ProtoPackage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProtoPackage);
      }
      if (LibraryPackage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LibraryPackage);
      }
      services_.WriteTo(output, _map_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Schema.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Schema);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Comment);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (ProtoPackage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProtoPackage);
      }
      if (LibraryPackage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LibraryPackage);
      }
      services_.WriteTo(ref output, _map_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Schema.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schema);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (ProtoPackage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtoPackage);
      }
      if (LibraryPackage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryPackage);
      }
      size += services_.CalculateSize(_map_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GapicMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Schema.Length != 0) {
        Schema = other.Schema;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.ProtoPackage.Length != 0) {
        ProtoPackage = other.ProtoPackage;
      }
      if (other.LibraryPackage.Length != 0) {
        LibraryPackage = other.LibraryPackage;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Schema = input.ReadString();
            break;
          }
          case 18: {
            Comment = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
          case 34: {
            ProtoPackage = input.ReadString();
            break;
          }
          case 42: {
            LibraryPackage = input.ReadString();
            break;
          }
          case 50: {
            services_.AddEntriesFrom(input, _map_services_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Schema = input.ReadString();
            break;
          }
          case 18: {
            Comment = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
          case 34: {
            ProtoPackage = input.ReadString();
            break;
          }
          case 42: {
            LibraryPackage = input.ReadString();
            break;
          }
          case 50: {
            services_.AddEntriesFrom(ref input, _map_services_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GapicMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A map from a transport name to ServiceAsClient, which allows
      /// listing information about the client objects that implement the
      /// parent RPC service for the specified transport.
      ///
      /// The key name is the transport, lower-cased with no separators
      /// (e.g. "grpc", "rest").
      /// </summary>
      public sealed partial class ServiceForTransport : pb::IMessage<ServiceForTransport>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ServiceForTransport> _parser = new pb::MessageParser<ServiceForTransport>(() => new ServiceForTransport());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ServiceForTransport> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Gapic.Metadata.GapicMetadata.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceForTransport() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceForTransport(ServiceForTransport other) : this() {
          clients_ = other.clients_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceForTransport Clone() {
          return new ServiceForTransport(this);
        }

        /// <summary>Field number for the "clients" field.</summary>
        public const int ClientsFieldNumber = 1;
        private static readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient>.Codec _map_clients_codec
            = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient.Parser), 10);
        private readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient> clients_ = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.ServiceAsClient> Clients {
          get { return clients_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ServiceForTransport);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ServiceForTransport other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!Clients.Equals(other.Clients)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= Clients.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          clients_.WriteTo(output, _map_clients_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          clients_.WriteTo(ref output, _map_clients_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += clients_.CalculateSize(_map_clients_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ServiceForTransport other) {
          if (other == null) {
            return;
          }
          clients_.Add(other.clients_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                clients_.AddEntriesFrom(input, _map_clients_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                clients_.AddEntriesFrom(ref input, _map_clients_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about a specific client implementing a proto-defined service.
      /// </summary>
      public sealed partial class ServiceAsClient : pb::IMessage<ServiceAsClient>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ServiceAsClient> _parser = new pb::MessageParser<ServiceAsClient>(() => new ServiceAsClient());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ServiceAsClient> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Gapic.Metadata.GapicMetadata.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceAsClient() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceAsClient(ServiceAsClient other) : this() {
          libraryClient_ = other.libraryClient_;
          rpcs_ = other.rpcs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServiceAsClient Clone() {
          return new ServiceAsClient(this);
        }

        /// <summary>Field number for the "library_client" field.</summary>
        public const int LibraryClientFieldNumber = 1;
        private string libraryClient_ = "";
        /// <summary>
        /// The name of the library client formatted as it appears in the source code
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LibraryClient {
          get { return libraryClient_; }
          set {
            libraryClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rpcs" field.</summary>
        public const int RpcsFieldNumber = 2;
        private static readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList>.Codec _map_rpcs_codec
            = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList.Parser), 18);
        private readonly pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList> rpcs_ = new pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList>();
        /// <summary>
        /// A mapping from each proto-defined RPC name to the the list of
        /// methods in library_client that implement it. There can be more
        /// than one library_client method for each RPC. RPCs with no
        /// library_client methods need not be included.
        ///
        /// The key name is the name of the RPC as defined and formated in
        /// the proto file.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Google.Gapic.Metadata.GapicMetadata.Types.MethodList> Rpcs {
          get { return rpcs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ServiceAsClient);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ServiceAsClient other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LibraryClient != other.LibraryClient) return false;
          if (!Rpcs.Equals(other.Rpcs)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (LibraryClient.Length != 0) hash ^= LibraryClient.GetHashCode();
          hash ^= Rpcs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LibraryClient.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LibraryClient);
          }
          rpcs_.WriteTo(output, _map_rpcs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LibraryClient.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LibraryClient);
          }
          rpcs_.WriteTo(ref output, _map_rpcs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (LibraryClient.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LibraryClient);
          }
          size += rpcs_.CalculateSize(_map_rpcs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ServiceAsClient other) {
          if (other == null) {
            return;
          }
          if (other.LibraryClient.Length != 0) {
            LibraryClient = other.LibraryClient;
          }
          rpcs_.Add(other.rpcs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                LibraryClient = input.ReadString();
                break;
              }
              case 18: {
                rpcs_.AddEntriesFrom(input, _map_rpcs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                LibraryClient = input.ReadString();
                break;
              }
              case 18: {
                rpcs_.AddEntriesFrom(ref input, _map_rpcs_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// List of GAPIC client methods implementing the proto-defined RPC
      /// for the transport and service specified in the containing
      /// structures.
      /// </summary>
      public sealed partial class MethodList : pb::IMessage<MethodList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MethodList> _parser = new pb::MessageParser<MethodList>(() => new MethodList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MethodList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Gapic.Metadata.GapicMetadata.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MethodList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MethodList(MethodList other) : this() {
          methods_ = other.methods_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MethodList Clone() {
          return new MethodList(this);
        }

        /// <summary>Field number for the "methods" field.</summary>
        public const int MethodsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_methods_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> methods_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of methods for a specific proto-service client in the
        /// GAPIC. These names should be formatted as they appear in the
        /// source code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Methods {
          get { return methods_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MethodList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MethodList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!methods_.Equals(other.methods_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= methods_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          methods_.WriteTo(output, _repeated_methods_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          methods_.WriteTo(ref output, _repeated_methods_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += methods_.CalculateSize(_repeated_methods_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MethodList other) {
          if (other == null) {
            return;
          }
          methods_.Add(other.methods_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                methods_.AddEntriesFrom(input, _repeated_methods_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                methods_.AddEntriesFrom(ref input, _repeated_methods_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
